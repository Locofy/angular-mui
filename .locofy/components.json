[
  {
    "name": "MuiButtonComponent",
    "path": "src/app/components/mui-button/mui-button.component.ts",
    "rawInfo": {
      "value": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'mui-button',\n  templateUrl: './mui-button.component.html',\n  standalone: true,\n  imports: [MatButtonModule, MatIconModule, CommonModule],\n  styleUrls: ['./mui-button.component.css'],\n})\nexport class MuiButtonComponent {\n  // Input properties for button configuration\n  @Input() type:\n    | 'basic'\n    | 'raised'\n    | 'stroked'\n    | 'flat'\n    | 'icon'\n    | 'fab'\n    | 'extended' = 'basic';\n  @Input() label: string = 'label';\n  @Input() iconName: string = ''; // For icon buttons\n  @Input() iconPosition: 'none' | 'left' | 'right' = 'none';\n  @Input() disabled: boolean = false; // Disable the button\n  @Input() ariaLabel: string = ''; // ARIA label for accessibility\n  @Input() className: string = '';\n  // Output event emitter for button clicks\n  @Output() click: EventEmitter<void> = new EventEmitter<void>();\n\n  // Method to handle button clicks\n  onClick(event: Event): void {\n    event.preventDefault(); // Prevent default behavior if necessary (e.g., for links)\n    this.click.emit();\n  }\n}\n"
    },
    "props": [
      {
        "name": "type",
        "propType": 1,
        "defaultValue": {
          "value": "basic"
        },
        "attr": "",
        "dataType": "union",
        "styleName": "",
        "previewValue": {
          "value": "basic"
        },
        "actionName": "",
        "condition": "",
        "clientId": "",
        "isOptional": true,
        "expectValues": [
          "basic",
          "raised",
          "stroked",
          "flat",
          "icon",
          "fab",
          "extended"
        ],
        "raw": "\n  // Input properties for button configuration\n  @Input() type:\n    | 'basic'\n    | 'raised'\n    | 'stroked'\n    | 'flat'\n    | 'icon'\n    | 'fab'\n    | 'extended' = 'basic';",
        "keys": []
      },
      {
        "name": "label",
        "propType": 1,
        "defaultValue": {
          "value": "label"
        },
        "attr": "",
        "dataType": "string",
        "styleName": "",
        "previewValue": {
          "value": "label"
        },
        "actionName": "",
        "condition": "",
        "clientId": "",
        "isOptional": true,
        "expectValues": null,
        "raw": "\n  @Input() label: string = 'label';",
        "keys": []
      },
      {
        "name": "iconName",
        "propType": 1,
        "defaultValue": {
          "value": ""
        },
        "attr": "",
        "dataType": "string",
        "styleName": "",
        "previewValue": {
          "value": ""
        },
        "actionName": "",
        "condition": "",
        "clientId": "",
        "isOptional": true,
        "expectValues": null,
        "raw": "\n  @Input() iconName: string = '';",
        "keys": []
      },
      {
        "name": "iconPosition",
        "propType": 1,
        "defaultValue": {
          "value": "none"
        },
        "attr": "",
        "dataType": "union",
        "styleName": "",
        "previewValue": {
          "value": "none"
        },
        "actionName": "",
        "condition": "",
        "clientId": "",
        "isOptional": true,
        "expectValues": [
          "none",
          "left",
          "right"
        ],
        "raw": " // For icon buttons\n  @Input() iconPosition: 'none' | 'left' | 'right' = 'none';",
        "keys": []
      },
      {
        "name": "disabled",
        "propType": 1,
        "defaultValue": {
          "value": false
        },
        "attr": "",
        "dataType": "boolean",
        "styleName": "",
        "previewValue": {
          "value": false
        },
        "actionName": "",
        "condition": "",
        "clientId": "",
        "isOptional": true,
        "expectValues": null,
        "raw": "\n  @Input() disabled: boolean = false;",
        "keys": []
      },
      {
        "name": "ariaLabel",
        "propType": 1,
        "defaultValue": {
          "value": ""
        },
        "attr": "",
        "dataType": "string",
        "styleName": "",
        "previewValue": {
          "value": ""
        },
        "actionName": "",
        "condition": "",
        "clientId": "",
        "isOptional": true,
        "expectValues": null,
        "raw": " // Disable the button\n  @Input() ariaLabel: string = '';",
        "keys": []
      },
      {
        "name": "className",
        "propType": 1,
        "defaultValue": {
          "value": ""
        },
        "attr": "",
        "dataType": "string",
        "styleName": "",
        "previewValue": {
          "value": ""
        },
        "actionName": "",
        "condition": "",
        "clientId": "",
        "isOptional": true,
        "expectValues": null,
        "raw": " // ARIA label for accessibility\n  @Input() className: string = '';",
        "keys": []
      }
    ],
    "import": [],
    "lib": [],
    "codeSettings": {
      "typescript": true,
      "cssStyling": ""
    },
    "ngSelector": "mui-button",
    "selectorId": "66bf68f490efaf86dc002ecc",
    "wrapperSelector": "app-wrapper-66bf68f490efaf86dc002ecc",
    "previewItems": [
      {
        "url": "https://d3beo87skfz9b9.cloudfront.net/66bf68f490efaf86dc002ecc/polyfills-1723887581514.js",
        "type": 2
      },
      {
        "url": "https://d3beo87skfz9b9.cloudfront.net/66bf68f490efaf86dc002ecc/main-1723887581514.js",
        "type": 2
      },
      {
        "url": "https://d3beo87skfz9b9.cloudfront.net/66bf68f490efaf86dc002ecc/styles-1723887581514.css",
        "type": 3
      },
      {
        "url": "https://d3beo87skfz9b9.cloudfront.net/66bf68f490efaf86dc002ecc/styles-1723887581514.css",
        "type": 3
      },
      {
        "url": "https://cdn.jsdelivr.net/npm/material-icons@1.13.12/iconfont/material-icons.min.css",
        "type": 3
      }
    ]
  }
]